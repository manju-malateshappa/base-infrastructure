---
  name: Destroy infrastructure
  on: 
    workflow_dispatch:
  env: 
    AWS_ASSUME_ROLE_NAME: ${{ secrets.AWS_ASSUME_ROLE_NAME}}
    S3_PREFIX: "terraform-state"
    DYNAMODB_PREFIX: "terraform-state-locks"
    PAT_GITHUB: ${{ secrets.PAT_GITHUB}}
  jobs:
    tf-destroy-dev:
      name: Terraform Destroy Dev
      runs-on: ubuntu-latest
      strategy:
        matrix:
          business_unit: ["business_unit_1"] 
      permissions: 
        actions: read
        contents: write
        security-events: write
        id-token: write
        packages: write
      steps: 
        - uses: actions/checkout@v3
        - uses: hashicorp/setup-terraform@v2
          with: 
            terraform_version: 1.5.2
        - name: Get Env Variables
          run: env
        - name: Set Environment Variables
          run: |
            echo "AWS_DEV_ACCOUNT_NUMBER=$(jq -r ".${{ matrix.business_unit }}.dev_account_number" config.json)" >> $GITHUB_ENV
            echo "AWS_PREPROD_ACCOUNT_NUMBER=$(jq -r .${{ matrix.business_unit }}.preprod_account_number config.json)" >> $GITHUB_ENV
            echo "AWS_PROD_ACCOUNT_NUMBER=$(jq -r ".${{ matrix.business_unit }}.prod_account_number" config.json)" >> $GITHUB_ENV
            echo "AWS_REGION=$(jq -r ".${{ matrix.business_unit }}.region" config.json)" >> $GITHUB_ENV
        - name: Assume Dev Role
          uses: aws-actions/configure-aws-credentials@v1
          with: 
            role-to-assume: arn:aws:iam::${{ env.AWS_DEV_ACCOUNT_NUMBER }}:role/${{ env.AWS_ASSUME_ROLE_NAME }}
            aws-region: ${{ env.AWS_REGION }}
        
        # Add this step to manually remove the lock from DynamoDB
        - name: Remove DynamoDB lock
          run: |
            echo "Attempting to remove lock from DynamoDB table"
            aws dynamodb delete-item \
              --table-name ${{ env.DYNAMODB_PREFIX }}-dev \
              --key '{"LockID": {"S": "terraform-state-dev-${{ env.AWS_REGION }}-${{ env.AWS_DEV_ACCOUNT_NUMBER }}/mlops-terraform-dev.state"}}'
          continue-on-error: true  # Continue even if this step fails
        
        # Add this step to force-unlock using Terraform
        - name: Force Unlock Terraform State
          run: |
            cd terraform/dev
            terraform init \
              -backend-config="bucket=terraform-state-dev-${{ env.AWS_REGION }}-${{ env.AWS_DEV_ACCOUNT_NUMBER }}" \
              -backend-config="region=${{ env.AWS_REGION }}" \
              -backend-config="key=mlops-terraform-dev.state" \
              -backend-config="dynamodb_table=${{ env.DYNAMODB_PREFIX }}-dev" \
              -backend-config="encrypt=true" \
              -reconfigure
            
            echo "Attempting to force-unlock state with ID: 1101254f-eac4-0e96-80c7-387d87a28bee"
            terraform force-unlock -force "1101254f-eac4-0e96-80c7-387d87a28bee"
          continue-on-error: true  # Continue even if this step fails
        
        # Modified destroy step to use -lock=false if needed
        - name: Terraform Destroy Dev
          run: | 
            # First try with normal destroy
            if ! make tf-destroy env=dev \
              bucket=terraform-state-dev-${{ env.AWS_REGION }}-${{ env.AWS_DEV_ACCOUNT_NUMBER }} \
              region=${{ env.AWS_REGION }} \
              key=mlops-terraform-dev.state \
              table=${{ env.DYNAMODB_PREFIX }}-dev \
              preprod=${{ env.AWS_PREPROD_ACCOUNT_NUMBER }} \
              prod=${{ env.AWS_PROD_ACCOUNT_NUMBER }} \
              pat_github=${{ env.PAT_GITHUB}}; then
              
              echo "Normal destroy failed. Trying with -lock=false..."
              
              # Try with lock=false as a fallback
              cd terraform/dev && \
              terraform init \
                -backend-config="bucket=terraform-state-dev-${{ env.AWS_REGION }}-${{ env.AWS_DEV_ACCOUNT_NUMBER }}" \
                -backend-config="region=${{ env.AWS_REGION }}" \
                -backend-config="key=mlops-terraform-dev.state" \
                -backend-config="dynamodb_table=${{ env.DYNAMODB_PREFIX }}-dev" \
                -backend-config="encrypt=true" \
                -reconfigure && \
              terraform destroy \
                -lock=false \
                -var preprod_account_number=${{ env.AWS_PREPROD_ACCOUNT_NUMBER }} \
                -var prod_account_number=${{ env.AWS_PROD_ACCOUNT_NUMBER }} \
                -var region=${{ env.AWS_REGION }} \
                -var pat_github=${{ env.PAT_GITHUB}} \
                -var-file ../account_config/dev/terraform.tfvars \
                -auto-approve
            fi
  
    # tf-destroy-preprod: 
    #   name: Terraform Destroy PreProd
    #   runs-on: ubuntu-latest
    #   strategy:
    #     matrix:
    #       business_unit: ["business_unit_1"] 
    #   permissions: 
    #     actions: read
    #     contents: write
    #     security-events: write
    #     id-token: write
    #     packages: write
    #   steps: 
    #     - uses: actions/checkout@v3
    #     - uses: hashicorp/setup-terraform@v2
    #       with: 
    #         terraform_version: 1.5.2
    #     - name: Get Env Variables
    #       run: env
    #     - name: Set Environment Variables
    #       run: |
    #         echo "AWS_PREPROD_ACCOUNT_NUMBER=$(jq -r .${{ matrix.business_unit }}.preprod_account_number config.json)" >> $GITHUB_ENV
    #         echo "AWS_PROD_ACCOUNT_NUMBER=$(jq -r ".${{ matrix.business_unit }}.prod_account_number" config.json)" >> $GITHUB_ENV
    #         echo "AWS_REGION=$(jq -r ".${{ matrix.business_unit }}.region" config.json)" >> $GITHUB_ENV
    #     - name: Assume PreProd Role
    #       uses: aws-actions/configure-aws-credentials@v1
    #       with: 
    #         role-to-assume: arn:aws:iam::${{ env.AWS_PREPROD_ACCOUNT_NUMBER }}:role/${{ env.AWS_ASSUME_ROLE_NAME }}
    #         aws-region: ${{ env.AWS_REGION }}
    #     - name: Terraform Destroy PreProd
    #       run: | 
    #         make tf-destroy env=preprod \
    #         bucket=terraform-state-preprod-${{ env.AWS_REGION }}-${{ env.AWS_PREPROD_ACCOUNT_NUMBER }} \
    #         region=${{ env.AWS_REGION }} \
    #         key=mlops-terraform-preprod.state \
    #         table=${{ env.DYNAMODB_PREFIX }}-preprod \
    #         preprod=${{ env.AWS_PREPROD_ACCOUNT_NUMBER }} \
    #         prod=${{ env.AWS_PROD_ACCOUNT_NUMBER }} \
    #         pat_github= ${{ env.PAT_GITHUB}}
    # tf-destroy-prod: 
    #   name: Terraform Destroy Prod
    #   runs-on: ubuntu-latest
    #   strategy:
    #     matrix:
    #       business_unit: ["business_unit_1"] 
    #   permissions: 
    #     actions: read
    #     contents: write
    #     security-events: write
    #     id-token: write
    #     packages: write
    #   steps: 
    #     - uses: actions/checkout@v3
    #     - uses: hashicorp/setup-terraform@v2
    #       with: 
    #         terraform_version: 1.5.2
    #     - name: Get Env Variables
    #       run: env
    #     - name: Set Environment Variables
    #       run: |
    #         echo "AWS_PREPROD_ACCOUNT_NUMBER=$(jq -r .${{ matrix.business_unit }}.preprod_account_number config.json)" >> $GITHUB_ENV
    #         echo "AWS_PROD_ACCOUNT_NUMBER=$(jq -r ".${{ matrix.business_unit }}.prod_account_number" config.json)" >> $GITHUB_ENV
    #         echo "AWS_REGION=$(jq -r ".${{ matrix.business_unit }}.region" config.json)" >> $GITHUB_ENV
    #     - name: Assume Prod Role
    #       uses: aws-actions/configure-aws-credentials@v1
    #       with: 
    #         role-to-assume: arn:aws:iam::${{ env.AWS_PROD_ACCOUNT_NUMBER }}:role/${{ env.AWS_ASSUME_ROLE_NAME }}
    #         aws-region: ${{ env.AWS_REGION }}
    #     - name: Terraform Destroy Prod
    #       run: | 
    #         make tf-destroy env=prod \
    #         bucket=terraform-state-prod-${{ env.AWS_REGION }}-${{ env.AWS_PROD_ACCOUNT_NUMBER }} \
    #         region=${{ env.AWS_REGION }} \
    #         key=mlops-terraform-prod.state \
    #         table=${{ env.DYNAMODB_PREFIX }}-prod \
    #         preprod=${{ env.AWS_PREPROD_ACCOUNT_NUMBER }} \
    #         prod=${{ env.AWS_PROD_ACCOUNT_NUMBER }} \
    #         pat_github= ${{ env.PAT_GITHUB}}